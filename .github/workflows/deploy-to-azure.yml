#name: Deploy to Azure
#
#on:
#  push:
#    branches:
#      - main  # Trigger the workflow on pushes to the main branch
#
#jobs:
#  build-and-push:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Code
#        uses: actions/checkout@v3
#
#      - name: Log in to Azure
#        uses: azure/login@v1
#        with:
#          creds: ${{ secrets.AZURE_CREDENTIAL }}
#
#      - name: Log in to Azure Container Registry
#        run: |
#          echo ${{ secrets.AZURE_REGISTRY_PASSWORD }} | docker login ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }} \
#            -u ${{ secrets.AZURE_REGISTRY_USERNAME }} --password-stdin
#
#      - name: Build and Push Docker Image to ACR
#        run: |
#          docker build -t ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }} .
#          docker push ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }}
#
#  deploy:
#    runs-on: ubuntu-latest
#    needs: build-and-push
#    steps:
#      - name: SSH to Azure VM and Deploy Docker Image
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.AZURE_VM_IP }}
#          username: ${{ secrets.AZURE_VM_USERNAME }}
#          key: ${{ secrets.AZURE_VM_SSH_KEY }}
#          script: |
#            echo ${{ secrets.AZURE_REGISTRY_PASSWORD }} | docker login ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }} \
#            -u ${{ secrets.AZURE_REGISTRY_USERNAME }} --password-stdin
#            docker pull ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }}
#
#            docker stop goat || true
#            docker rm goat || true
#
#            docker run -d --name goat -p 8080:8080 ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }}
#

name: Deploy to Azure

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIAL }}

      - name: Login to Azure Container Registry
        run: |
          echo "${{ secrets.AZURE_REGISTRY_PASSWORD }}" | docker login ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }} \
            -u ${{ secrets.AZURE_REGISTRY_USERNAME }} --password-stdin

      - name: List project files
        run: ls -la

      - name: Build and Push Docker Image
        run: |
          echo "${{ secrets.FIREBASE_JSON }}" > firebase.json

          docker buildx build . \
            --build-arg FIREBASE_JSON="$(cat firebase.json)" \
            --tag ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }} \
            --push

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: SSH to Azure VM and Deploy Image
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AZURE_VM_IP }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          key: ${{ secrets.AZURE_VM_SSH_KEY }}
          script: |
            echo "${{ secrets.AZURE_REGISTRY_PASSWORD }}" | docker login ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }} \
              -u ${{ secrets.AZURE_REGISTRY_USERNAME }} --password-stdin

            docker pull ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }}

            docker stop goat || true
            docker rm goat || true

            mkdir -p /firebase
            echo '${{ secrets.FIREBASE_JSON }}' > /firebase/firebase.json

            docker run -d --name goat -p 8080:8080 \
              -e FIREBASE_JSON="${{ secrets.FIREBASE_JSON }}" \
              ${{ secrets.AZURE_REGISTRY_LOGIN_SERVER }}/api:${{ github.sha }}
